#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Dec 24 14:25:19 2018

@author: ec
"""

import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
from matplotlib.lines import Line2D
import matplotlib.patches as mpatches
import seaborn as sns

font = {'family' : 'Arial',
        'weight' : 'bold'}
plt.rc('font', size=15, **font)

# read the csv
df = pd.read_csv('2012_SAT_Results.csv')

# remove some rows that have 's' instead of a number
df = df[~df['SAT Math Avg. Score'].str.contains('s')]

# After removing all 's' occurences, make columns numeric datatype for plotting
# this may be done with a for loop
df['SAT Math Avg. Score'] = pd.to_numeric(df['SAT Math Avg. Score'])
df['SAT Critical Reading Avg. Score'] = pd.to_numeric(df['SAT Critical Reading Avg. Score'])
df['SAT Writing Avg. Score'] = pd.to_numeric(df['SAT Writing Avg. Score']) 
df['Num of SAT Test Takers'] = pd.to_numeric(df['Num of SAT Test Takers'])

# set the x and y values we will be plotting based on the shared df column names
x = 'SAT Critical Reading Avg. Score'
y = 'SAT Math Avg. Score'
#s = df['Num of SAT Test Takers']/2 #df['SAT Math Avg. Score']/3

# Create the color map based on the unique boro names using seaborn presets
color_labels = df['boro'].unique()
rgb_values = sns.color_palette("Set2", 5)
color_map = dict(zip(color_labels, rgb_values))

# Set the number of columns and rows for our subplots
fig, axes = plt.subplots(nrows=2, ncols=1)

# Plot the first dataframe
ax1 = df.plot.scatter(ax=axes[0], x=x, y=y, s=df['Num of SAT Test Takers']/2, c=df['boro'].map(color_map), marker='.', figsize=(13,5))

# Draw a rectanlge to highlight the data shown in the next plot
rect = plt.Rectangle((350, 300), 100, 300, fill=False)
ax1.add_patch(rect)

# Create a new df with constraints on the x axis
df_middle = df[(df[x] <450) & (df[x] > 350)]

# Plot the new df
ax2 = df_middle.plot(ax=axes[1],x=x,y=y,kind='scatter', s=df_middle['Num of SAT Test Takers'], c=df_middle['boro'].map(color_map), marker='.', figsize=(10,10))

# Create a custom legend
legend_elements = [Line2D([0], [0], marker='o', color='w', markerfacecolor=color_map['Bronx'], label='Bronx', markersize=10),
                Line2D([0], [0], marker='o', color='w', markerfacecolor=color_map['Brooklyn'], label='Brooklyn', markersize=10),
                Line2D([0], [0], marker='o', color='w', markerfacecolor=color_map['Manhattan'], label='Manhattan', markersize=10),
                Line2D([0], [0], marker='o', color='w', markerfacecolor=color_map['Queens'], label='Queens', markersize=10),
                Line2D([0], [0], marker='o', color='w', markerfacecolor=color_map['Staten Island'], label='Staten Island', markersize=10),
                Line2D([0], [0], marker='o', color='w', markerfacecolor='black', label='Size = # of test takers', markersize=10)
                       
                ]        

# Initialize the legend                 
ax1.legend(handles=legend_elements, loc='best', prop={'size': 12})

# Set face color to make the colors pop
ax1.set_facecolor('#e5e6e8')
ax2.set_facecolor('#e5e6e8')     
                  
# Add title
plt.suptitle('2012 SAT Scores in NYC Schools', size=20, **font)

plt.show()